name: Workflow to scan vulnerability
on:
  workflow_call:
    inputs:
      runner:
        ## ['cn', 'us', 'cn1', 'cn2', 'cn3', 'us1', 'us2', 'us3']
        type: string
        default: "cn4"
        required: false
jobs:
  scanning:
    name: vulnerability scanning
    runs-on: ${{ inputs.runner }}
    timeout-minutes: 20

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - id: trivy-db
        name: Check trivy db sha
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          endpoint='/orgs/aquasecurity/packages/container/trivy-db/versions'
          headers='Accept: application/vnd.github+json'
          jqFilter='.[] | select(.metadata.container.tags[] | contains("latest")) | .name | sub("sha256:";"")'
          sha=$(gh api -H "${headers}" "${endpoint}" | jq --raw-output "${jqFilter}")
          echo "Trivy DB sha256:${sha}"
          echo "::set-output name=sha::${sha}"

      - uses: actions/cache@v3
        with:
          path: .trivy
          key: ${{ runner.os }}-trivy-db-${{ steps.trivy-db.outputs.sha }}

      - name: Checkout trivy ignore files.
        uses: actions/checkout@v2
        with:
          repository: Wiredcraft/github-actions
          path: ./trivyignore
          ref: trivy-whitelist

      #Trivy as our default code scan tool
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          trivyignores: trivyignore/.trivyignore
          security-checks: secret,vuln
          format: 'table'
          severity: 'CRITICAL'
          exit-code: '1'
          cache-dir: .trivy

      - name: Fix .trivy permissions
        run: sudo chown -R $(stat . -c %u:%g) .trivy

